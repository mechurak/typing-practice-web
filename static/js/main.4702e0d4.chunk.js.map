{"version":3,"sources":["components/ui/Theme.js","components/ui/Header.js","components/Character.js","components/Typing.js","components/ui/Practice.js","components/ui/Import.js","components/ui/Home.js","components/App.js","index.js"],"names":["createMuiTheme","typography","tab","textTransform","fontWeight","fontSzie","ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","elevation","useStyles","makeStyles","theme","menuButton","marginRight","spacing","toolbarMargin","mixins","toolbar","tabContainer","marginLeft","minWidth","Header","classes","useState","value","setValue","useEffect","window","location","pathname","Fragment","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","Typography","variant","Tabs","onChange","e","Tab","label","component","Link","to","Character","c","index","cursor","input","guideEnabled","realStyle","borderBottom","style","Typing","leftStr","strArray","curIndex","setCurIndex","setInput","ignoreList","startTime","setStartTime","wpm","setWpm","tabIndex","onKeyDown","indexOf","key","tempStartTime","Date","now","console","log","elapsedTime","tempWpm","toFixed","calcWpm","map","i","tempQuestionsList","subject","category","set","id","final","hint","question","description","answer_id","tempAnswers","answer","important","root","flexGrow","marginBottom","paper","padding","textAlign","palette","text","secondary","title","fontSize","Practice","questionsList","JSON","parse","localStorage","getItem","answers","questionLength","length","hintEnabled","setHintEnabled","setGuideEnabled","questionsContent","gutterBottom","fontFamily","Divider","Grid","container","item","xs","sm","Card","CardContent","CardActions","Button","size","onClick","newIndex","QUESTIONS_LS","ANSWERS_LS","sheetUrl","setSheetUrl","isImporting","setIsImporting","questions","TextField","defaultValue","fullWidth","event","target","Tabletop","init","callback","data","tabletop","sheets","all","setItem","stringify","simpleSheet","CUR_QUESTIONS_LIST_LS","CUR_ANSWERS_LS","setButton","margin","Home","history","questionSet","Set","subjects","handleSetClick","setStr","innerText","curQuestionsList","forEach","push","curAnswers","curQuestions","alert","handleSubjectClick","curAnswer","answerIdx","tempArrayForMap","tempMap","Map","keyValue","objFromMap","get","undefined","split","pop","idStr","tempQuestionsItem","values","App","process","ThemeProvider","basename","exact","path","Import","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4702e0d4.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst arcBlue = \"#0B72B9\";\r\nconst arcOrange = \"#FFBA60\";\r\n\r\n\r\nexport default createMuiTheme({\r\n  // palette: {\r\n  //   common: {\r\n  //     arcBlue: `${arcBlue}`,\r\n  //     arcOrange: `${arcOrange}`,\r\n  //   },\r\n  //   primary: {\r\n  //     main: `${arcBlue}`\r\n  //   },\r\n  //   secondary: {\r\n  //     main: `${arcOrange}`\r\n  //   },\r\n  // },\r\n  typography: {\r\n    tab: {\r\n      // fontFamily: \"Raleway\",\r\n      textTransform: \"none\",\r\n      fontWeight: 700,\r\n      fontSzie: \"1rem\",\r\n    },\r\n  }\r\n}) \r\n","import React, { useEffect, useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconButton, Tab, Tabs } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar\r\n  },\r\n  tabContainer: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  tab: {\r\n    ...theme.typography.tab,\r\n    minWidth: 10,\r\n    marginLeft: \"25px\",\r\n  }\r\n}))\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (e, value) => {\r\n    setValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.location.pathname === \"/\" && value !== 0) {\r\n      setValue(0);\r\n    } else if (window.location.pathname === \"/practice\" && value !== 1) {\r\n      setValue(1);\r\n    } else if (window.location.pathname === \"/import\" && value !== 2) {\r\n      setValue(2);\r\n    } else if (window.location.pathname === \"/history\" && value !== 3) {\r\n      setValue(3);\r\n    }\r\n  }, [value]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ElevationScroll>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\">\r\n              Typing Practice\r\n            </Typography>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              // indicatorColor=\"primary\"\r\n              className={classes.tabContainer}\r\n            >\r\n              <Tab className={classes.tab} label=\"Home\" component={Link} to=\"/\" />\r\n              <Tab className={classes.tab} label=\"Practice\" component={Link} to=\"/practice\" />\r\n              <Tab className={classes.tab} label=\"Import\" component={Link} to=\"/import\" />\r\n              <Tab className={classes.tab} label=\"History\" component={Link} to=\"/history\" />\r\n            </Tabs>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n      <div className={classes.toolbarMargin} />\r\n    </React.Fragment>\r\n  )\r\n} ","import React from 'react';\r\n\r\nexport default function Character({ c, index, cursor, input, guideEnabled }) {\r\n  const waitStyle = {\r\n    color: \"silver\",\r\n    borderBottom: \"3px solid blue\",\r\n  }\r\n  const typoStyle = {\r\n    color: \"red\",\r\n    borderBottom: \"3px solid red\",\r\n  }\r\n  const todoStyle = guideEnabled ? {\r\n    color: \"silver\"\r\n  } : {\r\n    color: \"snow\"\r\n  }\r\n  const doneStyle = {\r\n    color: \"black\"\r\n  }\r\n\r\n  let realStyle = {};\r\n  if (index === cursor) {\r\n    if (input === \"\") {\r\n      realStyle = waitStyle;\r\n    } else {\r\n      realStyle = typoStyle;\r\n    }\r\n  } else if (index < cursor){\r\n    realStyle = doneStyle;\r\n  } else if (index > cursor) {\r\n    realStyle = todoStyle;\r\n  }\r\n\r\n  return (\r\n    <span style={realStyle}>\r\n      {c === '\\n' ? <br /> : c}\r\n    </span>\r\n  )\r\n}","import { Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Character from \"./Character\";\r\n\r\nexport default function Typing({ leftStr, guideEnabled }) {\r\n  const strArray = [...leftStr];\r\n  const [curIndex, setCurIndex] = useState(0);\r\n  const [input, setInput] = useState(\"\");\r\n  const ignoreList = [\"Alt\", \"Shift\", \"Control\", \"HangulMode\", \"HanjaMode\"];\r\n  const [startTime, setStartTime] = useState(0);\r\n  const [wpm, setWpm] = useState(0.0);\r\n\r\n  useEffect(() => {\r\n    setCurIndex(0);\r\n  }, [leftStr]);\r\n\r\n  const calcWpm = () => {\r\n    const elapsedTime = Date.now() - startTime;\r\n    const words = curIndex / 5;\r\n    const tempWpm = ((words / elapsedTime) * 1000 * 60).toFixed(1);\r\n    setWpm(tempWpm);\r\n  };\r\n\r\n  const handleTyping = (e) => {\r\n    if (ignoreList.indexOf(e.key) > -1) {\r\n      // ignore\r\n    } else if (e.key === \"Backspace\" && curIndex > 0) {\r\n      setCurIndex(curIndex - 1);\r\n      setInput(\"\");\r\n    } else if (e.key === strArray[curIndex]) {\r\n      setCurIndex(curIndex + 1);\r\n      setInput(\"\");\r\n    } else if (e.key === \"Enter\" && strArray[curIndex] === \"\\n\") {\r\n      setCurIndex(curIndex + 1);\r\n      setInput(\"\");\r\n    } else {\r\n      setInput(e.key);\r\n    }\r\n\r\n    // WPM\r\n    if (curIndex === 1) {\r\n      const tempStartTime = Date.now();\r\n      setStartTime(tempStartTime);\r\n      console.log(\"Start!!!\", tempStartTime);\r\n    }\r\n    if (e.key === \" \" || e.key === \"Enter\") {\r\n      calcWpm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography>wpm: {wpm}</Typography>\r\n      <div tabIndex={0} onKeyDown={handleTyping}>\r\n        {strArray.map((c, i) => {\r\n          return (\r\n            <Character\r\n              key={i}\r\n              c={c}\r\n              index={i}\r\n              cursor={curIndex}\r\n              input={input}\r\n              guideEnabled={guideEnabled}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button, Divider, Typography } from \"@material-ui/core\";\r\nimport Typing from \"../Typing\";\r\n\r\nconst CUR_QUESTIONS_LIST_LS = \"curQuestionsList\";\r\nconst CUR_ANSWERS_LS = \"curAnswers\";\r\n\r\nconst tempQuestionsList = [\r\n  [\r\n    {\r\n      subject: \"Furniture\",\r\n      category: \"common\",\r\n      set: \"가구#01\",\r\n      id: \"Furniture#q1\",\r\n      final: \"\",\r\n      hint: \"[Int] 본인 집에 있는 가구, 가장 좋아하는 가구 묘사 - 침대\",\r\n      question: `Tell me about the furniture you have in your home.\r\nIs there a piece that is your favorite?`,\r\n      description: \"\",\r\n      answer_id: \"Furniture#a1\",\r\n    },\r\n  ],\r\n];\r\n\r\nconst tempAnswers = [\r\n  {\r\n    subject: \"Furniture\",\r\n    id: \"Furniture#a1\",\r\n    hint: \"[Int] 본인 집에 있는 가구, 가장 좋아하는 가구 묘사 - 침대\",\r\n    answer: `There are many types of furniture in my apartment.\r\n\r\nIn the living room, there is a sofa, a coffee table and a display case.\r\nIn the bedroom, I have a desk, a chair, a bed and a nightstand.\r\nI also have some bookshelves and a dressing table.\r\nI also have some dressers and some built-in closets.\r\n\r\nAmong them, my favorite furniture is my bed because I love to sleep.\r\nI have had that bed for five years.\r\nIt is very comfy and cozy, so it helps me get quality sleep.\r\nI think getting a good night's sleep is very important.\r\nI need to get at least seven hours of sleep each day.\r\nThe mattress is covered with a bed sheet.\r\nThere is a warm blanket and several pillows on the bed.\r\nThere is also an electronic mat on the bed, which keeps me warm at night.\r\n\r\nI always make my bed when I wake up in the morning.\r\nI like to keep my bed nice and tidy.\r\n\r\nSo, these are the furniture I have at home.`,\r\n    description: \"본인 방 묘사 답변에 활용\",\r\n    important: \"\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: \"10px\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nexport default function Practice() {\r\n  const classes = useStyles();\r\n\r\n  const questionsList =\r\n    JSON.parse(localStorage.getItem(CUR_QUESTIONS_LIST_LS)) ||\r\n    tempQuestionsList;\r\n  const answers =\r\n    JSON.parse(localStorage.getItem(CUR_ANSWERS_LS)) || tempAnswers;\r\n  const questionLength = questionsList.length;\r\n\r\n  const [curIndex, setCurIndex] = useState(0);\r\n  const [hintEnabled, setHintEnabled] = useState(false);\r\n  const [guideEnabled, setGuideEnabled] = useState(false);\r\n\r\n  const handleNext = () => {\r\n    let newIndex = curIndex + 1;\r\n    if (newIndex >= questionLength) {\r\n      newIndex = 0;\r\n    }\r\n    setCurIndex(newIndex);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    let newIndex = curIndex - 1;\r\n    if (newIndex < 0) {\r\n      newIndex = questionLength - 1;\r\n    }\r\n    setCurIndex(newIndex);\r\n  };\r\n\r\n  const handleHint = () => {\r\n    setHintEnabled(~hintEnabled);\r\n  };\r\n\r\n  const handleGuide = () => {\r\n    setGuideEnabled(~guideEnabled);\r\n  };\r\n\r\n  const questionsContent = questionsList[curIndex].map((question, i) => (\r\n    <React.Fragment key={i}>\r\n      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n        [{question[\"set\"]}] {question[\"id\"]}\r\n      </Typography>\r\n      <pre style={{ fontFamily: \"inherit\" }}>\r\n        <Typography variant=\"body1\" component=\"p\">\r\n          {question[\"question\"]}\r\n        </Typography>\r\n      </pre>\r\n      {hintEnabled ? (\r\n        <>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n            Hint ({question[\"id\"]})\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {question[\"hint\"]}\r\n          </Typography>\r\n        </>\r\n      ) : null}\r\n      {i < questionsList[curIndex].length - 1 ? <Divider /> : null}\r\n    </React.Fragment>\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Card className={classes.root}>\r\n            <CardContent>{questionsContent}</CardContent>\r\n            <CardActions>\r\n              <Button size=\"small\" onClick={handlePrev}>\r\n                Prev\r\n              </Button>\r\n              <Typography variant=\"body1\">\r\n                {curIndex + 1} / {questionLength}\r\n              </Typography>\r\n              <Button size=\"small\" onClick={handleNext}>\r\n                Next\r\n              </Button>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                color={hintEnabled ? \"primary\" : \"default\"}\r\n                onClick={handleHint}\r\n              >\r\n                {hintEnabled ? \"Hint off\" : \"Hint on\"}\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n          {hintEnabled ? (\r\n            <Card className={classes.root}>\r\n              <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n                  Hint ({answers[curIndex][\"id\"]})\r\n                </Typography>\r\n                <pre style={{ fontFamily: \"inherit\" }}>\r\n                  <Typography variant=\"body2\" component=\"p\">\r\n                    {answers[curIndex][\"hint\"]}\r\n                  </Typography>\r\n                </pre>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n                  Description ({answers[curIndex][\"id\"]})\r\n                </Typography>\r\n                <pre style={{ fontFamily: \"inherit\" }}>\r\n                  <Typography variant=\"body2\" component=\"p\">\r\n                    {answers[curIndex][\"description\"]}\r\n                  </Typography>\r\n                </pre>\r\n              </CardContent>\r\n            </Card>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              <Typography\r\n                className={classes.title}\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n              >\r\n                {answers[curIndex][\"id\"]}\r\n              </Typography>\r\n              <Typing\r\n                leftStr={answers[curIndex][\"answer\"]}\r\n                guideEnabled={guideEnabled}\r\n              />\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                color={guideEnabled ? \"primary\" : \"default\"}\r\n                onClick={handleGuide}\r\n              >\r\n                {guideEnabled ? \"Guide off\" : \"Guide on\"}\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport Tabletop from \"tabletop\";\r\n\r\nconst QUESTIONS_LS = \"questions\";\r\nconst ANSWERS_LS = \"answers\";\r\n\r\nexport default function Practice() {\r\n  const [sheetUrl, setSheetUrl] = useState(\r\n    \"https://docs.google.com/spreadsheets/d/1q9dzowKY0p5_Ee-OiCH2bbtTkycOmru-evlj9MsHr1E/edit#gid=284135557\"\r\n  );\r\n  const [isImporting, setIsImporting] = useState(false);\r\n\r\n  const questions = JSON.parse(localStorage.getItem(QUESTIONS_LS)) || [];\r\n  const answers = JSON.parse(localStorage.getItem(ANSWERS_LS)) || [];\r\n\r\n  const handleUrlChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSheetUrl(value);\r\n  };\r\n\r\n  const loadSheet = () => {\r\n    console.log(\"loadSheet()\", sheetUrl);\r\n    setIsImporting(true);\r\n    Tabletop.init({\r\n      key: sheetUrl,\r\n      callback: (data, tabletop) => {\r\n        const questions = tabletop.sheets(\"question\").all();\r\n        const answers = tabletop.sheets(\"answer\").all();\r\n        console.log(questions);\r\n        localStorage.setItem(QUESTIONS_LS, JSON.stringify(questions));\r\n        console.log(answers);\r\n        localStorage.setItem(ANSWERS_LS, JSON.stringify(answers));\r\n        setIsImporting(false);\r\n      },\r\n      simpleSheet: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\">Import your data from google sheet.</Typography>\r\n      <TextField\r\n        label=\"google sheet url\"\r\n        defaultValue={sheetUrl}\r\n        fullWidth\r\n        onChange={handleUrlChange}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={loadSheet}>\r\n        Import\r\n      </Button>\r\n      {isImporting ? (\r\n        <Typography variant=\"body2\">Importing...</Typography>\r\n      ) : (\r\n        <Typography variant=\"body2\">\r\n          {questions.length} questions, {answers.length} answers are loaded.\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Divider, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { SubscriptionsOutlined } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\nconst QUESTIONS_LS = \"questions\";\r\nconst ANSWERS_LS = \"answers\";\r\nconst CUR_QUESTIONS_LIST_LS = \"curQuestionsList\";\r\nconst CUR_ANSWERS_LS = \"curAnswers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  setButton: {\r\n    margin: \"10px\",\r\n    minWidth: \"180px\",\r\n    textTransform: \"none\",\r\n  },\r\n}));\r\n\r\nconst Home = ({ history }) => {\r\n  const classes = useStyles();\r\n\r\n  const questions = JSON.parse(localStorage.getItem(QUESTIONS_LS)) || [];\r\n  console.log(questions);\r\n  const questionSet = [...new Set(questions.map((item) => item.set))];\r\n  console.log(questionSet);\r\n  const answers = JSON.parse(localStorage.getItem(ANSWERS_LS)) || [];\r\n  console.log(answers);\r\n  const subjects = [...new Set(answers.map((answer) => answer.subject))];\r\n  console.log(subjects);\r\n\r\n  const handleSetClick = (event) => {\r\n    const setStr = event.target.innerText;\r\n    console.log(setStr);\r\n    let curQuestionsList = [];\r\n    questions.forEach((question) => {\r\n      if (question.set === setStr) {\r\n        curQuestionsList.push([question]);\r\n      }\r\n    });\r\n    console.log(curQuestionsList);\r\n    let curAnswers = [];\r\n    curQuestionsList.forEach((curQuestions) => {\r\n      for (let i = 0; i < answers.length; i++) {\r\n        if (curQuestions[0].answer_id === answers[i].id) {\r\n          curAnswers.push(answers[i]);\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    console.log(curAnswers);\r\n    if (curQuestionsList.length !== curAnswers.length) {\r\n      alert(\r\n        `curQuestionsList(${curQuestionsList.length}) and curAnswers(${curAnswers.length}) have different length.`\r\n      );\r\n    } else {\r\n      localStorage.setItem(\r\n        CUR_QUESTIONS_LIST_LS,\r\n        JSON.stringify(curQuestionsList)\r\n      );\r\n      localStorage.setItem(CUR_ANSWERS_LS, JSON.stringify(curAnswers));\r\n      // TODO: Let Header know this change\r\n      history.push(\"practice\");\r\n    }\r\n  };\r\n\r\n  const handleSubjectClick = (event) => {\r\n    const subject = event.target.innerText;\r\n    console.log(subject);\r\n    let curAnswers = [];\r\n    answers.forEach((answer) => {\r\n      if (answer.subject === subject) {\r\n        curAnswers.push(answer);\r\n      }\r\n    });\r\n    console.log(curAnswers);\r\n    let curQuestionsList = [];\r\n    curAnswers.forEach((curAnswer, answerIdx) => {\r\n      let tempArrayForMap = [];\r\n      for (let i = 0; i < questions.length; i++) {\r\n        if (curAnswer.id === questions[i].answer_id) {\r\n          tempArrayForMap.push([questions[i][\"question\"], questions[i]]);\r\n        }\r\n      }\r\n      const tempMap = new Map();\r\n      tempArrayForMap.forEach((keyValue, i) => {\r\n        const [key, value] = keyValue;\r\n        let objFromMap = tempMap.get(key);\r\n        if (objFromMap === undefined) {\r\n          tempMap.set(key, value);\r\n        } else {\r\n          const setStr = value.set.split(\"#\").pop();  // \"집#02\" -> \"02\"\r\n          objFromMap.set = objFromMap.set + \",\" + setStr;\r\n          const idStr = value.id.split(\"#\").pop();  // \"Housing#q7\" -> \"q7\"\r\n          objFromMap.id = objFromMap.id + \",\" + idStr;\r\n        }\r\n      });\r\n      // console.log(\"tempMap\", tempMap);\r\n      const tempQuestionsItem = [...tempMap.values()];\r\n      // console.log(\"tempQuestionsItem\", tempQuestionsItem);\r\n      curQuestionsList.push(tempQuestionsItem);\r\n    });\r\n    console.log(curQuestionsList);\r\n\r\n    localStorage.setItem(\r\n      CUR_QUESTIONS_LIST_LS,\r\n      JSON.stringify(curQuestionsList)\r\n    );\r\n    localStorage.setItem(CUR_ANSWERS_LS, JSON.stringify(curAnswers));\r\n    // TODO: Let Header know this change\r\n    history.push(\"practice\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\">Practice by question set</Typography>\r\n      {questionSet.map((item, index) => (\r\n        <Button\r\n          key={index}\r\n          variant=\"contained\"\r\n          className={classes.setButton}\r\n          onClick={handleSetClick}\r\n        >\r\n          {item}\r\n        </Button>\r\n      ))}\r\n      <Divider />\r\n      <Typography variant=\"h6\">Practice by subject</Typography>\r\n      {subjects.map((item, index) => (\r\n        <Button\r\n          key={index}\r\n          variant=\"contained\"\r\n          className={classes.setButton}\r\n          onClick={handleSubjectClick}\r\n        >\r\n          {item}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { ThemeProvider } from '@material-ui/core/styles';\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport theme from './ui/Theme';\r\nimport Header from '../components/ui/Header';\r\nimport Practice from './ui/Practice';\r\nimport Import from './ui/Import';\r\nimport Home from './ui/Home';\r\n\r\nfunction App() {\r\n  console.log(\"PUBLIC_URL\", process.env.PUBLIC_URL)\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />          \r\n          <Route exact path=\"/practice\" component={Practice} />\r\n          <Route exact path=\"/import\" component={Import} />\r\n          <Route exact path=\"/history\" component={() => <div>History</div>} />          \r\n          {/* Redirect all 404's to home */}\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}