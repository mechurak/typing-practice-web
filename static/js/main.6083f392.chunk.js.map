{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","dbService","storageService","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","getMyNweets","collection","where","uid","orderBy","get","nweets","console","log","docs","map","doc","data","useEffect","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","Date","now","putString","response","getDownloadURL","createdAt","creatorId","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","setNweets","onSnapshot","snapshot","nweetArry","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6083f392.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n// Initialize Firebase\n// export default firebase.initializeApp(firebaseConfig);\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    console.log(event.target.name);\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    console.log(name);\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              onChange={onChange}\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${Date.now()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {  \r\n  const [nweets, setNweets] = useState([]);  \r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArry = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArry);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj}/>\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}'s Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Profile from \"routes/Profile\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      console.log(user);\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}